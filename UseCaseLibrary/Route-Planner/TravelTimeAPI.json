{
  "swagger": "2.0",
  "info": {
    "title": "TravelTime API",
    "description": "This is the TravelTime API, which provides functionality for time-based geographic queries, routing, geocoding, and more. For more details, visit [TravelTime API Documentation](https://docs.traveltime.com/).",
    "version": "1.0.0"
  },
  "host": "api.traveltimeapp.com",
  "basePath": "/v4",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "name": "X-Api-Key",
      "in": "header"
    },
    "appIdAuth": {
      "type": "apiKey",
      "name": "X-Application-Id",
      "in": "header"
    }
  },
  "security": [
    {"apiKeyAuth": []},
    {"appIdAuth": []}
  ],
  "paths": {
    "/time-map": {
      "get": {
        "summary": "Generate a time-map using public transportation",
        "parameters": [
          {"name": "type", "in": "query", "required": true, "type": "string", "description": "Transport mode (e.g., public_transport)"},
          {"name": "travel_time", "in": "query", "required": true, "type": "integer", "description": "Maximum travel time in seconds"},
          {"name": "lat", "in": "query", "required": true, "type": "number", "description": "Latitude"},
          {"name": "lng", "in": "query", "required": true, "type": "number", "description": "Longitude"},
          {"name": "arrival_time", "in": "query", "required": true, "type": "string", "description": "ISO 8601 formatted arrival time"},
          {"name": "app_id", "in": "query", "required": true, "type": "string", "description": "Application ID"},
          {"name": "api_key", "in": "query", "required": true, "type": "string", "description": "API Key"}
        ],
        "responses": {"200": {"description": "Successful response"}}
      },
      "post": {
        "summary": "Generate a time-map using POST request",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {"type": "object", "example": {"departure_searches": []}}
          }
        ],
        "responses": {"200": {"description": "Successful response"}}
      }
    },
    "/time-map/fast": {
      "post": {
        "summary": "Generate a fast time-map",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {"type": "object", "example": {"arrival_searches": []}}
          }
        ],
        "responses": {"200": {"description": "Successful response"}}
      }
    },
    "/time-filter": {
      "get": {
        "summary": "Filter locations based on travel time",
        "parameters": [
          {"name": "type", "in": "query", "required": true, "type": "string", "description": "Travel mode (e.g., public_transport)"},
          {"name": "arrival_time", "in": "query", "required": true, "type": "string", "description": "ISO 8601 formatted arrival time"},
          {"name": "search_lat", "in": "query", "required": true, "type": "number", "description": "Latitude for search origin"},
          {"name": "search_lng", "in": "query", "required": true, "type": "number", "description": "Longitude for search origin"},
          {"name": "locations", "in": "query", "required": true, "type": "string", "description": "Comma-separated list of location coordinates"}
        ],
        "responses": {"200": {"description": "Successful response"}}
      },
      "post": {
        "summary": "Filter locations using POST request",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {"type": "object"}
          }
        ],
        "responses": {"200": {"description": "Successful response"}}
      }
    },
    "/routes": {
      "post": {
        "summary": "Generate routes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {"type": "object", "example": {"locations": []}}
          }
        ],
        "responses": {"200": {"description": "Successful response"}}
      }
    },
    "/geocoding/search": {
      "get": {
        "summary": "Search for geocoding information",
        "parameters": [
          {"name": "query", "in": "query", "required": true, "type": "string", "description": "Search query (e.g., an address or place name)"}
        ],
        "responses": {"200": {"description": "Geocoding results"}}
      }
    },
    "/geocoding/reverse": {
      "get": {
        "summary": "Reverse geocoding",
        "parameters": [
          {"name": "lat", "in": "query", "required": true, "type": "number", "description": "Latitude of the location"},
          {"name": "lng", "in": "query", "required": true, "type": "number", "description": "Longitude of the location"}
        ],
        "responses": {"200": {"description": "Reverse geocoding results"}}
      }
    },
    "/supported-locations": {
      "post": {
        "summary": "Check for supported locations",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {"type": "object", "example": {"locations": []}}
          }
        ],
        "responses": {"200": {"description": "Supported locations response"}}
      }
    },
    "/map-info": {
      "get": {
        "summary": "Retrieve map information",
        "responses": {"200": {"description": "Map information retrieved"}}
      }
    }
  }
}